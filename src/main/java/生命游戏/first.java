/**
    * @author 韩橹航
    * @version 1.0
    * 根据 百度百科 ， 生命游戏 ，简称为 生命 ，是英国数学家约翰·何顿·康威在 1970 年发明的细胞自动机。给定一个包含 m × n 个格子的面板，每一个格子都可以看成是一个细胞。每个细胞都具有一个初始状态： 1 即为 活细胞 （live），或 0 即为 死细胞 （dead）。每个细胞与其八个相邻位置（水平，垂直，对角线）的细胞都遵循以下四条生存定律：如果活细胞周围八个位置的活细胞数少于两个，则该位置活细胞死亡；
    * 如果活细胞周围八个位置有两个或三个活细胞，则该位置活细胞仍然存活；
    * 如果活细胞周围八个位置有超过三个活细胞，则该位置活细胞死亡；
    * 如果死细胞周围正好有三个活细胞，则该位置死细胞复活；
    * 下一个状态是通过将上述规则同时应用于当前状态下的每个细胞所形成的，其中细胞的出生和死亡是同时发生的。给你 m x n 网格面板 board 的当前状态，返回下一个状态。
*/
package 生命游戏;
//这里需要模拟出这个整体的规则，模拟出标记的方法
public class first {
    public void gameOfLife(int[][] board) {
        int m = board.length;       // 行数
        int n = board[0].length;    // 列数
        int count = 0;              // 统计每个格子周围八个位置的活细胞数
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                count = 0;      // 每个格子计数重置为0
                for(int x = -1; x <= 1; x++){
                    for(int y = -1; y <= 1; y++){
                        // 枚举周围八个位置，其中去掉本身（x = y = 0）和越界的情况
                        if((x == 0 && y == 0) || i + x < 0 || i + x >= m || j + y < 0 || j + y >= n)continue;
                        // 如果周围格子是活细胞（1）或者是活细胞变死细胞（2）的，都算一个活细胞
                        if(board[i + x][j + y] == 1 || board[i + x][j + y] == 2)count++;
                    }
                }
                if(board[i][j] == 1 && (count < 2 || count > 3))board[i][j] = 2;    // 格子本身是活细胞，周围满足变成死细胞的条件，标记为2
                if(board[i][j] == 0 && count == 3)board[i][j] = 3;      // 格子本身是死细胞，周围满足复活条件，标记为3
            }
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                // 死细胞为0，活细胞变成死细胞为2，都为偶数，模2为0，刚好是死细胞
                // 活细胞为1，死细胞变成活细胞为3，都为奇数，模2为1，刚好是活细胞
                board[i][j] %= 2;
            }
        }

    }
}
